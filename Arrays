const numbersArray1 = [1, 2, 3, 4, 5];
const numbersArray2 = [6, 7, 8, 9, 10];

// Add something in front of the array.
numbersArray1.push();

// Add something in front of the array.
numbersArray1.unshift();

// Add something in the middle of the array
numbersArray1.splice();
/ Example
numbersArray1.splice(2, 1); // Result: [1, 2, 4]

// Remove something end of the array and return it.
numbersArray1.pop();

// Delete everything from array
/ Solution 1
numbersArray1 = [];
/ Solution 2
numbersArray1.length = 0;
/ Solution 3
numbersArray1.splice(0, numbers.length);
/ Solution 4
while (numbers.length > 0)
numbersArray1.pop();

// Merge/combine two arrays
const combinedArray = numbersArray1.concat(numbersArray2);
/ Result = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

// Seperate array into two arrays.
tempArrayWithNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
tempArrayWithNumbers.slice(2, 4)

// Find element in an array
/ Returns true or false, but can be edited to return something else. like a object.
var found = numbersArray1.find(function(number) {
  return number > 10;
  });
/ ES6 cleaner way
var found = someTempArrayOfCourses.find(course => course.name === 'a');

// Find index of element in an array
/ Returns the index number starting from 0 and if nothing is found returns -1
var found = numbersArray1.findIndex(function(number) {
  return number > 10;
});

// Iterate over array
/ First way
for (let number of numbers)
console.log(number);
/ Second way
numbers.forEach(number => console.log(number));
numbers.forEach((index, number) => console.log(index, number));
